name: Build and Deploy AI Life Coach

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and Test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          client/package-lock.json
          server/package-lock.json
    
    - name: Install client dependencies
      run: |
        cd client
        npm ci
    
    - name: Install server dependencies
      run: |
        cd server
        npm ci
    
    - name: Build client
      run: |
        cd client
        NODE_ENV=production npm run build
    
    - name: Copy client build to server
      run: |
        cp -r client/build/* server/public/
    
    - name: Test server (syntax check)
      run: |
        cd server
        node -c index.js
        echo "✅ Server syntax check passed"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          server/public/
          server/package.json
          server/index.js

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    name: Deploy to Google App Engine
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          client/package-lock.json
          server/package-lock.json
    
    - name: Install dependencies and build
      run: |
        cd client
        npm ci
        NODE_ENV=production npm run build
        cp -r build/* ../server/public/
        cd ../server
        npm ci
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Create app.yaml for deployment
      run: |
        cd server
        cat > app.yaml << EOF
        runtime: nodejs20
        
        env_variables:
          NODE_ENV: production
          MONGODB_URI: "${{ secrets.MONGODB_URI }}"
          OPENAI_API_KEY: "${{ secrets.OPENAI_API_KEY }}"
          JWT_SECRET: "${{ secrets.JWT_SECRET }}"
          CLIENT_URL: "https://ai-life-coach-demo.uc.r.appspot.com"
          OPENAI_MODEL: "gpt-3.5-turbo"
        
        automatic_scaling:
          max_instances: 10
          min_instances: 0
          target_cpu_utilization: 0.6
        EOF
    
    - name: Deploy to Google App Engine
      run: |
        cd server
        gcloud app deploy --quiet --promote
        echo "✅ Deployment successful!"
        echo "🌐 App URL: https://ai-life-coach-demo.uc.r.appspot.com"
